name: Step 3 # Copilot edits

on:
  push:
    branches:
      - "accelerate-with-copilot"
    paths:
      - "src/static/**"

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_4_FILE: ".github/steps/4-copilot-on-github.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.1.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: step-results-table

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/mardkown-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # START: Check practical exercise

      - name: Check for participant info in app.js
        id: check-app-js
        continue-on-error: true
        run: |
          file="src/static/app.js"
          keyphrase='participant'
          minimum_occurences=3
          found_occurences=$(grep -o "$keyphrase" "$file" | wc -l)
          if [ "$found_occurences" -lt "$minimum_occurences" ]; then
            echo "::error::Please use Copilot to update the web application activity cards to show participant info."
            exit 1
          fi

      - name: Check for participant info in styles.css
        id: check-styles
        continue-on-error: true
        run: |
          file="src/static/styles.css"
          keyphrase='participant'
          minimum_occurences=1

          found_occurences=$(grep -o "$keyphrase" "$file" | wc -l)
          if [ "$found_occurences" -lt "$minimum_occurences" ]; then
            echo "::error::Please use Copilot to update the web application styling to support participant info."
            exit 1
          fi

      # END: Check practical exercise

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v1
        with:
          template-file: exercise-toolkit/mardkown-templates/step-feedback/step-results-table.md
          template-vars: >
            {
              "step_number": 3,
              "passed": ${{ !contains(steps.*.outcome, 'failure') }},
              "results_table": [
                {
                  "check": "Check `app.js` for participant info",
                  "result": ${{ steps.check-app-js.outcome == 'success' }}
                },
                {
                  "check": "Participant styling updated in `styles.css`",
                  "result": ${{ steps.check-styles.outcome == 'success' }}
                }
              ]
            }

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v1
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number=4

      - name: Update comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_4_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "Step 3"
          gh workflow enable "Step 4"
          gh workflow enable "Step 4b"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
